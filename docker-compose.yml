version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:14.2
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      DB_SERVER_URL: ${DB_SERVER_URL}
      DB_MAX_CONNECTIONS: ${DB_MAX_CONNECTIONS}
      DB_MAX_IDLE_CONNECTIONS: ${DB_MAX_IDLE_CONNECTIONS}
      DB_MAX_LIFETIME_CONNECTIONS: ${DB_MAX_LIFETIME_CONNECTIONS}
      SERVER_READ_TIMEOUT: ${SERVER_READ_TIMEOUT}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_SECRET_KEY_EXPIRE_MINUTES_COUNT: ${JWT_SECRET_KEY_EXPIRE_MINUTES_COUNT}

    ports:
      - "5432:5432"
    volumes: 
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
  go:
    container_name: go-fiber-restful-microservice
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy # waiting until heathcheck of postgres is good

volumes:
  dbdata: # persist database